/home/aman/Desktop/Parallelization-of-JavaScript/horcrux-instrumentation-rewriter/node_modules/falafel/index.js
Options are {"useProxy":true,"caching":false,"include_prefix":false,"path":"avirus-tracking/_app/chunks/decompress-ccb44664.js","origPath":"/newsgraphics/2021/coronavirus-tracking/_app/chunks/decompress-ccb44664.js","e2eTesting":false,"pageLoaded":"true;","invocation_limit":"5000000;","pattern":"cg","proxyName":"window"}
{
  useProxy: true,
  caching: false,
  include_prefix: false,
  path: 'avirus-tracking/_app/chunks/decompress-ccb44664.js',
  origPath: '/newsgraphics/2021/coronavirus-tracking/_app/chunks/decompress-ccb44664.js',
  e2eTesting: false,
  pageLoaded: 'true;',
  invocation_limit: '5000000;',
  pattern: 'cg',
  proxyName: 'window'
}
error evalmachine.<anonymous>:1
var Y=Object.defineProperty,tt=Object.defineProperties;var et=Object.getOwnPropertyDescriptors;var R=Object.getOwnPropertySymbols;var st=Object.prototype.hasOwnProperty,at=Object.prototype.propertyIsEnumerable;var B=(e,i,a)=>i in e?Y(e,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[i]=a,C=(e,i)=>{for(var a in i||(i={}))st.call(i,a)&&B(e,a,i[a]);if(R)for(var a of R(i))at.call(i,a)&&B(e,a,i[a]);return e},D=(e,i)=>tt(e,et(i));import{f as k}from"./dates-6d69902f.js";import{f as F}from"./string-e670316b.js";function z(e,i){typeof i=="undefined"&&(i=0);const a=Array(e).fill(i);let c=0;function u(){let _=0,n=0;for(let p=0;p<a.length;p+=1){const d=a[p];d!==null&&d>=0&&(_+=d,n+=1)}return _/n}return{next(_){a[c++]=_,c%=e;let n=0,p=0;for(let d=0;d<a.length;d+=1){const y=a[d];y!==null&&y>=0&&(n+=y,p+=1)}return p===0?null:n/p},value:u,stddev(){const _=u();let n=0,p=0;for(let d=0;d<a.length;d+=1){const y=a[d];if(y!==null&&y>=0){const b=y-_;n+=b*b,p+=1}}return Math.sqrt(n/p)}}}function G(e,i){return e+i}function it(e){let i=0;for(let a=e.length-1;a>=0;a--)if(e[a]===0)i+=1;else if(e[a]!==null)return i;return e.length}function lt(e,i){typeof i=="undefined"&&(i=0);const a=Array(e).fill(i);let c=Array(e).fill(1);function u(){let _=0,n=0;for(let p=0;p<a.length;p+=1){const d=a[p];d!==null&&d>=0&&(_+=d,n+=1)}return _/n}return{next(_){let n=it(c);for(_!==null&&_>0?(c.push(1+n),a.push(_)):_===0?n>=2*e-1?(c=Array(a.length).fill(1),c.push(1),a.push(_)):(c.push(0),a.push(_)):(c.push(null),a.push(_));c.reduce(G)-c[0]>=e;)a.shift(),c.shift();let p=0,d=c.reduce(G);for(let y=0;y<a.length;y+=1){const b=a[y];b!==null&&b>=0&&(p+=b)}return d===0?null:p/d},value:u,stddev(){const _=u();let n=0,p=0;for(let d=0;d<a.length;d+=1){const y=a[d];if(y!==null&&y>=0){const b=y-_;n+=b*b,p+=1}}return Math.sqrt(n/p)}}}function ct(e,i){return e+i}const _t=(e,i,a)=>{let c=e.length-1;for(;c>e.length-a&&!(e[c]===0||e[c]);)c--;if(c<=e.length-a)return null;const u=c-i;return(e[c]/e[u]-1)*100};function nt(e){const i=k(e.range[0],e.range[1]),a=t=>Array(Math.max(0,i.length-t.length)).fill(0).concat(t),c={both:{},cases:{},deaths:{},tests:{},pct_pos:{},hospitalized:{}},u={both:new Set,cases:new Set,deaths:new Set,tests:new Set,pct_pos:new Set,hospitalized:new Set},_={cases:new Map,deaths:new Map};e.anomalies.date_based.forEach(t=>{const{date:l,end_date:v,type:r,active:w}=t;let g;l&&(v?g=k(l,v):w?g=k(l,e.range[1]):g=[l],r==="both"?(t.omit_from_rolling_average&&g.forEach(h=>{u.cases.add(h),u.deaths.add(h)}),g.forEach(h=>{c.cases[h]||(c.cases[h]=t),c.deaths[h]||(c.deaths[h]=t)})):g.forEach(h=>{u[r]&&t.omit_from_rolling_average&&u[r].add(h),c[r][h]||(c[r][h]=t)}),(r==="cases"||r==="deaths")&&t.geoid===e.metadata.geoid&&t.adjusted_daily_count_for_avg&&g.forEach(h=>{_[r]&&t.adjusted_daily_count_for_avg&&_[r].set(h,t.adjusted_daily_count_for_avg)}))});const n=a(e.cases),p=a(e.deaths),d=e.hospitalized_currently&&a(e.hospitalized_currently),y=e.icu_covid_currently&&a(e.icu_covid_currently),b=e.hospital_admissions&&a(e.hospital_admissions),H=e.hospital_beds_used&&a(e.hospital_beds_used),I=e.hospital_capacity&&a(e.hospital_capacity),J=e.icu_occupied_currently&&a(e.icu_occupied_currently),K=e.icu_capacity&&a(e.icu_capacity),L=e.hospitalized_cumulative&&a(e.hospitalized_cumulative),N=e.tests_total&&a(e.tests_total),P=e.tests_positive&&a(e.tests_positive);let j;e.metadata.region_type==="country"&&e.metadata.geoid==="USA"&&(j=e.states_reporting&&a(e.states_reporting));let E={cases:0,deaths:0,hospitalized:0,icu:0,hospital_admissions:0,hospitalized_cumulative:0,hospital_beds_used:0,hospital_capacity:0,icu_occupied_currently:0,icu_capacity:0,tests:0,tests_positive:0},O=null;const q=new Map;e.hhs&&e.hhs.hospitalization.forEach(t=>{q.set(t.week_starting,t)});const A=new Map;e.cdc_county_test_positivity&&e.cdc_county_test_positivity.forEach((t,l,v)=>{if(l>0){let r=v[l-1].date,w=i.indexOf(r)+1,g=i.indexOf(t.date);for(let h=w;h<g;h++)A.set(i[h],t);A.set(t.date,t)}A.set(t.date,t)});const x=(t,l)=>(l||(l=7),t.metadata.country==="United States"?lt(l):z(l)),f={cases:x(e),deaths:x(e),cases_14day:x(e,14),deaths_14day:x(e,14),cases_30day:x(e,30),deaths_30day:x(e,30),hospitalized:z(7),icu:z(7),hospital_admissions:z(7),hospitalized_cumulative:z(7),hospital_beds_used:z(7),hospital_capacity:z(7),icu_occupied_currently:z(7),icu_capacity:z(7),tests:z(7),tests_positive:z(7),tests_anomaly_detector:z(14,null)},o=i.map((t,l)=>{var Z,$;const v={cases:n[l],deaths:p[l]},r={cases:v.cases-E.cases,deaths:v.deaths-E.deaths};let w=u.cases.has(t)?null:r.cases,g=u.deaths.has(t)?null:r.deaths;_.cases.has(t)&&(w=w+_.cases.get(t)),_.deaths.has(t)&&(g=g+_.deaths.get(t));const h={cases:f.cases.next(w),deaths:f.deaths.next(g)},W={cases:f.cases_14day.next(w),deaths:f.deaths_14day.next(g)},X={cases:f.cases_30day.next(w),deaths:f.deaths_30day.next(g)},s={date:t,total:v,daily:r,average:h,average_14day:W,average_30day:X,anomalies:{cases:c.cases[t],deaths:c.deaths[t],tests:c.tests[t],pct_pos:c.pct_pos[t],hospitalized:c.hospitalized[t]},hospitalization:{}};if(e.hospitalized_currently&&(s.total.hospitalized=d[l],s.daily.hospitalized=s.total.hospitalized,s.average.hospitalized=f.hospitalized.next(s.daily.hospitalized),s.total.icu=y[l],s.daily.icu=s.total.icu,s.average.icu=f.icu.next(s.daily.icu),s.daily.hospital_admissions=b[l],s.average.hospital_admissions=f.hospital_admissions.next(s.daily.hospital_admissions),s.total.hospital_admissions=s.daily.hospital_admissions+E.hospital_admissions,s.total.hospital_beds_used=H[l],s.daily.hospital_beds_used=s.total.hospital_beds_used,s.average.hospital_beds_used=f.hospital_beds_used.next(s.daily.hospital_beds_used),s.total.hospital_capacity=I[l],s.daily.hospital_capacity=s.total.hospital_capacity,s.average.hospital_capacity=f.hospital_capacity.next(s.daily.hospital_capacity),s.total.icu_occupied_currently=J[l],s.daily.icu_occupied_currently=s.total.icu_occupied_currently,s.average.icu_occupied_currently=f.icu_occupied_currently.next(s.daily.icu_occupied_currently),s.total.icu_capacity=K[l],s.daily.icu_capacity=s.total.icu_capacity,s.average.icu_capacity=f.icu_capacity.next(s.daily.icu_capacity)),e.hospitalized_cumulative&&(s.total.hospitalized_cumulative=L[l],s.daily.hospitalized_cumulative=s.total.hospitalized_cumulative?s.total.hospitalized_cumulative-E.hospitalized_cumulative:null,s.average.hospitalized_cumulative=f.hospitalized_cumulative.next(s.daily.hospitalized_cumulative)),e.tests_positive&&(s.daily.tests_positive=P[l],s.total.tests_positive=E.tests_positive+s.daily.tests_positive),e.tests_total&&(s.daily.tests=N[l],s.total.tests=E.tests+s.daily.tests,s.daily.tests&&s.daily.tests===s.daily.tests_positive&&(u.tests.add(s.date),s.daily.tests=null,s.daily.tests_positive=null),s.average.tests=f.tests.next(u.tests.has(s.date)?null:s.daily.tests),e.metadata.geoid==="USA"&&(s.daily.states_reporting=j[l],j[l]<40&&(s.daily.tests_incomplete=!0,s.average.tests_incomplete=!0,s.average.tests=null,s.average.tests_positive=null))),e.tests_positive&&(s.average.tests_positive=f.tests_positive.next(u.tests.has(s.date)?null:s.daily.tests_positive),s.daily.pct_pos=u.pct_pos.has(s.date)?null:s.daily.tests?Math.round(100*(100*s.daily.tests_positive)/s.daily.tests)/100:null,s.average.pct_pos=u.pct_pos.has(s.date)?null:s.daily.tests!==null&&s.daily.tests!==void 0&&s.average.tests?Math.round(100*(100*s.average.tests_positive)/s.average.tests)/100:null),e.hhs&&e.hhs.hospitalization.length>0){const m=q.get(s.date)||O;m&&s.date<=m.week_ending&&(O=m,s.hospitalization=m,s.average.nyt_covid_hospitalized=m.nyt_covid_hospitalized,s.daily.hospitalized=m.nyt_covid_hospitalized,s.average.hospitalized=m.nyt_covid_hospitalized)}if((($=(Z=e.vaccination)==null?void 0:Z.timeseries)==null?void 0:$.length)>0&&(s.vaccination=e.vaccination.timeseries.find(m=>m.date===s.date)),e.metadata.region_type==="county"){const m=A.get(s.date);m&&!u.pct_pos.has(s.date)?(s.daily.pct_pos=m.pct_pos_last7,s.average.pct_pos=m.pct_pos_last7,s.average_14day.pct_pos=m.pct_pos_14day,s.cdc_county_test_positivity=m):(s.daily.pct_pos=null,s.average.pct_pos=null,s.average_14day.pct_pos=null)}return E=Object.assign({},v),s});if(e.average_overrides){const t=new Map;e.average_overrides.forEach(l=>{t.set(l.date,l)}),o.forEach(l=>{l.average.cases=t.get(l.date).cases,l.average.deaths=t.get(l.date).deaths})}const S={raw:{cases:null,deaths:null,hospitalized:null,icu:null,hospital_admissions:null,hospitalized_cumulative:null,hospital_beds_used:null,hospital_capacity:null,icu_occupied_currently:null,icu_capacity:null,tests:null,tests_positive:null,pct_pos:null},formatted:{cases:null,deaths:null,hospitalized:null,icu:null,hospital_admissions:null,hospitalized_cumulative:null,hospital_beds_used:null,hospital_capacity:null,icu_occupied_currently:null,icu_capacity:null,tests:null,tests_positive:null,pct_pos:null},accessible:{cases:null,deaths:null,hospitalized:null,icu:null,hospital_admissions:null,hospitalized_cumulative:null,hospital_beds_used:null,hospital_capacity:null,icu_occupied_currently:null,icu_capacity:null,tests:null,tests_positive:null,pct_pos:null}};Object.keys(S.raw).forEach(t=>{if(e.metadata.country==="United States"&&e.metadata.region_type==="county"&&t==="deaths")S.raw[t]=null,S.formatted[t]="\u2014",S.accessible[t]="\u2014";else{const l="average",v=o.map(w=>w[l][t]),r=_t(v,14,15);S.raw[t]=r,S.formatted[t]=F(r,v[v.length-1]),S.accessible[t]=F(r,v[v.length-1],!0)}});let U;e.metadata.country==="United States"&&e.metadata.region_type==="county"?U=t=>!t.anomalies.deaths||!t.anomalies.deaths.active?t.average_30day.deaths:null:U=t=>!t.anomalies.deaths||!t.anomalies.deaths.active?t.average.deaths:null;const Q=o.map(t=>t.anomalies).pop(),T={cases:o.slice(6).map(t=>!t.anomalies.cases||!t.anomalies.cases.active?t.average.cases:null).filter(t=>t===0||t).pop(),deaths:o.slice(6).map(U).filter(t=>t===0||t).pop(),hospitalized:o.slice(6).map(t=>t.average.hospitalized).filter(t=>t===0||t).pop(),icu:o.slice(6).map(t=>t.average.icu).filter(t=>t===0||t).pop(),hospital_admissions:o.slice(6).map(t=>t.average.hospital_admissions).filter(t=>t===0||t).pop(),hospitalized_cumulative:o.slice(6).map(t=>t.average.hospitalized_cumulative).filter(t=>t===0||t).pop(),hospital_beds_used:o.slice(6).map(t=>t.average.hospital_beds_used).filter(t=>t===0||t).pop(),hospital_capacity:o.slice(6).map(t=>t.average.hospital_capacity).filter(t=>t===0||t).pop(),icu_occupied_currently:o.slice(6).map(t=>t.average.icu_occupied_currently).filter(t=>t===0||t).pop(),icu_capacity:o.slice(6).map(t=>t.average.icu_capacity).filter(t=>t===0||t).pop(),tests:o.slice(o.length-15).map(t=>t.average.tests).filter(t=>t===0||t).pop(),pct_pos:o.slice(o.length-15).map(t=>t.average.pct_pos).filter(t=>t===0||t).pop()},V={total:e.latest,average:T,anomalies:Q,vaccination:e.vaccination?e.vaccination.latest:void 0,total_cases_last_7_days:o.map(t=>t.daily.cases).slice(-7).reduce(ct,0)},M=D(C({},e.metadata),{date:i[i.length-1],anomalies:e.anomalies,methodology:e.methodology,breadcrumbs:e.breadcrumbs,latest:V,percent_change_14day:S,data:o,hhs:e.hhs&&{hospitals:e.hhs.hospitals}});return e.latest_states_reporting&&(M.latest.states_reporting=e.latest_states_reporting),e.state_test_positivity_reliable&&(M.state_test_positivity_reliable=e.state_test_positivity_reliable),e.hhs&&e.hhs.hospitalization.length>0&&(M.hospital_area_population=e.hhs.hospital_area_population),e.metadata.country==="United States"&&e.metadata.region_type!=="county"&&(M.hospital_area_population=e.metadata.population),e.cdc_transmission&&(M.cdc_transmission=e.cdc_transmission),e.cdc_community_level&&(M.cdc_community_level=e.cdc_community_level),M}export{nt as d};
                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^^^^^^

SyntaxError: Cannot use import statement outside a module
    at new Script (vm.js:88:7)
    at main (/home/aman/Desktop/Parallelization-of-JavaScript/horcrux-instrumentation-rewriter/instrumentation/record.js:547:13)
    at Object.<anonymous> (/home/aman/Desktop/Parallelization-of-JavaScript/horcrux-instrumentation-rewriter/instrumentation/record.js:575:20)
    at Module._compile (internal/modules/cjs/loader.js:999:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)
    at Module.load (internal/modules/cjs/loader.js:863:32)
    at Function.Module._load (internal/modules/cjs/loader.js:708:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:60:12)
    at internal/main/run_main_module.js:17:47
var Y=Object.defineProperty,tt=Object.defineProperties;var et=Object.getOwnPropertyDescriptors;var R=Object.getOwnPropertySymbols;var st=Object.prototype.hasOwnProperty,at=Object.prototype.propertyIsEnumerable;var B=(e,i,a)=>i in e?Y(e,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[i]=a,C=(e,i)=>{for(var a in i||(i={}))st.call(i,a)&&B(e,a,i[a]);if(R)for(var a of R(i))at.call(i,a)&&B(e,a,i[a]);return e},D=(e,i)=>tt(e,et(i));import{f as k}from"./dates-6d69902f.js";import{f as F}from"./string-e670316b.js";function z(e,i){typeof i=="undefined"&&(i=0);const a=Array(e).fill(i);let c=0;function u(){let _=0,n=0;for(let p=0;p<a.length;p+=1){const d=a[p];d!==null&&d>=0&&(_+=d,n+=1)}return _/n}return{next(_){a[c++]=_,c%=e;let n=0,p=0;for(let d=0;d<a.length;d+=1){const y=a[d];y!==null&&y>=0&&(n+=y,p+=1)}return p===0?null:n/p},value:u,stddev(){const _=u();let n=0,p=0;for(let d=0;d<a.length;d+=1){const y=a[d];if(y!==null&&y>=0){const b=y-_;n+=b*b,p+=1}}return Math.sqrt(n/p)}}}function G(e,i){return e+i}function it(e){let i=0;for(let a=e.length-1;a>=0;a--)if(e[a]===0)i+=1;else if(e[a]!==null)return i;return e.length}function lt(e,i){typeof i=="undefined"&&(i=0);const a=Array(e).fill(i);let c=Array(e).fill(1);function u(){let _=0,n=0;for(let p=0;p<a.length;p+=1){const d=a[p];d!==null&&d>=0&&(_+=d,n+=1)}return _/n}return{next(_){let n=it(c);for(_!==null&&_>0?(c.push(1+n),a.push(_)):_===0?n>=2*e-1?(c=Array(a.length).fill(1),c.push(1),a.push(_)):(c.push(0),a.push(_)):(c.push(null),a.push(_));c.reduce(G)-c[0]>=e;)a.shift(),c.shift();let p=0,d=c.reduce(G);for(let y=0;y<a.length;y+=1){const b=a[y];b!==null&&b>=0&&(p+=b)}return d===0?null:p/d},value:u,stddev(){const _=u();let n=0,p=0;for(let d=0;d<a.length;d+=1){const y=a[d];if(y!==null&&y>=0){const b=y-_;n+=b*b,p+=1}}return Math.sqrt(n/p)}}}function ct(e,i){return e+i}const _t=(e,i,a)=>{let c=e.length-1;for(;c>e.length-a&&!(e[c]===0||e[c]);)c--;if(c<=e.length-a)return null;const u=c-i;return(e[c]/e[u]-1)*100};function nt(e){const i=k(e.range[0],e.range[1]),a=t=>Array(Math.max(0,i.length-t.length)).fill(0).concat(t),c={both:{},cases:{},deaths:{},tests:{},pct_pos:{},hospitalized:{}},u={both:new Set,cases:new Set,deaths:new Set,tests:new Set,pct_pos:new Set,hospitalized:new Set},_={cases:new Map,deaths:new Map};e.anomalies.date_based.forEach(t=>{const{date:l,end_date:v,type:r,active:w}=t;let g;l&&(v?g=k(l,v):w?g=k(l,e.range[1]):g=[l],r==="both"?(t.omit_from_rolling_average&&g.forEach(h=>{u.cases.add(h),u.deaths.add(h)}),g.forEach(h=>{c.cases[h]||(c.cases[h]=t),c.deaths[h]||(c.deaths[h]=t)})):g.forEach(h=>{u[r]&&t.omit_from_rolling_average&&u[r].add(h),c[r][h]||(c[r][h]=t)}),(r==="cases"||r==="deaths")&&t.geoid===e.metadata.geoid&&t.adjusted_daily_count_for_avg&&g.forEach(h=>{_[r]&&t.adjusted_daily_count_for_avg&&_[r].set(h,t.adjusted_daily_count_for_avg)}))});const n=a(e.cases),p=a(e.deaths),d=e.hospitalized_currently&&a(e.hospitalized_currently),y=e.icu_covid_currently&&a(e.icu_covid_currently),b=e.hospital_admissions&&a(e.hospital_admissions),H=e.hospital_beds_used&&a(e.hospital_beds_used),I=e.hospital_capacity&&a(e.hospital_capacity),J=e.icu_occupied_currently&&a(e.icu_occupied_currently),K=e.icu_capacity&&a(e.icu_capacity),L=e.hospitalized_cumulative&&a(e.hospitalized_cumulative),N=e.tests_total&&a(e.tests_total),P=e.tests_positive&&a(e.tests_positive);let j;e.metadata.region_type==="country"&&e.metadata.geoid==="USA"&&(j=e.states_reporting&&a(e.states_reporting));let E={cases:0,deaths:0,hospitalized:0,icu:0,hospital_admissions:0,hospitalized_cumulative:0,hospital_beds_used:0,hospital_capacity:0,icu_occupied_currently:0,icu_capacity:0,tests:0,tests_positive:0},O=null;const q=new Map;e.hhs&&e.hhs.hospitalization.forEach(t=>{q.set(t.week_starting,t)});const A=new Map;e.cdc_county_test_positivity&&e.cdc_county_test_positivity.forEach((t,l,v)=>{if(l>0){let r=v[l-1].date,w=i.indexOf(r)+1,g=i.indexOf(t.date);for(let h=w;h<g;h++)A.set(i[h],t);A.set(t.date,t)}A.set(t.date,t)});const x=(t,l)=>(l||(l=7),t.metadata.country==="United States"?lt(l):z(l)),f={cases:x(e),deaths:x(e),cases_14day:x(e,14),deaths_14day:x(e,14),cases_30day:x(e,30),deaths_30day:x(e,30),hospitalized:z(7),icu:z(7),hospital_admissions:z(7),hospitalized_cumulative:z(7),hospital_beds_used:z(7),hospital_capacity:z(7),icu_occupied_currently:z(7),icu_capacity:z(7),tests:z(7),tests_positive:z(7),tests_anomaly_detector:z(14,null)},o=i.map((t,l)=>{var Z,$;const v={cases:n[l],deaths:p[l]},r={cases:v.cases-E.cases,deaths:v.deaths-E.deaths};let w=u.cases.has(t)?null:r.cases,g=u.deaths.has(t)?null:r.deaths;_.cases.has(t)&&(w=w+_.cases.get(t)),_.deaths.has(t)&&(g=g+_.deaths.get(t));const h={cases:f.cases.next(w),deaths:f.deaths.next(g)},W={cases:f.cases_14day.next(w),deaths:f.deaths_14day.next(g)},X={cases:f.cases_30day.next(w),deaths:f.deaths_30day.next(g)},s={date:t,total:v,daily:r,average:h,average_14day:W,average_30day:X,anomalies:{cases:c.cases[t],deaths:c.deaths[t],tests:c.tests[t],pct_pos:c.pct_pos[t],hospitalized:c.hospitalized[t]},hospitalization:{}};if(e.hospitalized_currently&&(s.total.hospitalized=d[l],s.daily.hospitalized=s.total.hospitalized,s.average.hospitalized=f.hospitalized.next(s.daily.hospitalized),s.total.icu=y[l],s.daily.icu=s.total.icu,s.average.icu=f.icu.next(s.daily.icu),s.daily.hospital_admissions=b[l],s.average.hospital_admissions=f.hospital_admissions.next(s.daily.hospital_admissions),s.total.hospital_admissions=s.daily.hospital_admissions+E.hospital_admissions,s.total.hospital_beds_used=H[l],s.daily.hospital_beds_used=s.total.hospital_beds_used,s.average.hospital_beds_used=f.hospital_beds_used.next(s.daily.hospital_beds_used),s.total.hospital_capacity=I[l],s.daily.hospital_capacity=s.total.hospital_capacity,s.average.hospital_capacity=f.hospital_capacity.next(s.daily.hospital_capacity),s.total.icu_occupied_currently=J[l],s.daily.icu_occupied_currently=s.total.icu_occupied_currently,s.average.icu_occupied_currently=f.icu_occupied_currently.next(s.daily.icu_occupied_currently),s.total.icu_capacity=K[l],s.daily.icu_capacity=s.total.icu_capacity,s.average.icu_capacity=f.icu_capacity.next(s.daily.icu_capacity)),e.hospitalized_cumulative&&(s.total.hospitalized_cumulative=L[l],s.daily.hospitalized_cumulative=s.total.hospitalized_cumulative?s.total.hospitalized_cumulative-E.hospitalized_cumulative:null,s.average.hospitalized_cumulative=f.hospitalized_cumulative.next(s.daily.hospitalized_cumulative)),e.tests_positive&&(s.daily.tests_positive=P[l],s.total.tests_positive=E.tests_positive+s.daily.tests_positive),e.tests_total&&(s.daily.tests=N[l],s.total.tests=E.tests+s.daily.tests,s.daily.tests&&s.daily.tests===s.daily.tests_positive&&(u.tests.add(s.date),s.daily.tests=null,s.daily.tests_positive=null),s.average.tests=f.tests.next(u.tests.has(s.date)?null:s.daily.tests),e.metadata.geoid==="USA"&&(s.daily.states_reporting=j[l],j[l]<40&&(s.daily.tests_incomplete=!0,s.average.tests_incomplete=!0,s.average.tests=null,s.average.tests_positive=null))),e.tests_positive&&(s.average.tests_positive=f.tests_positive.next(u.tests.has(s.date)?null:s.daily.tests_positive),s.daily.pct_pos=u.pct_pos.has(s.date)?null:s.daily.tests?Math.round(100*(100*s.daily.tests_positive)/s.daily.tests)/100:null,s.average.pct_pos=u.pct_pos.has(s.date)?null:s.daily.tests!==null&&s.daily.tests!==void 0&&s.average.tests?Math.round(100*(100*s.average.tests_positive)/s.average.tests)/100:null),e.hhs&&e.hhs.hospitalization.length>0){const m=q.get(s.date)||O;m&&s.date<=m.week_ending&&(O=m,s.hospitalization=m,s.average.nyt_covid_hospitalized=m.nyt_covid_hospitalized,s.daily.hospitalized=m.nyt_covid_hospitalized,s.average.hospitalized=m.nyt_covid_hospitalized)}if((($=(Z=e.vaccination)==null?void 0:Z.timeseries)==null?void 0:$.length)>0&&(s.vaccination=e.vaccination.timeseries.find(m=>m.date===s.date)),e.metadata.region_type==="county"){const m=A.get(s.date);m&&!u.pct_pos.has(s.date)?(s.daily.pct_pos=m.pct_pos_last7,s.average.pct_pos=m.pct_pos_last7,s.average_14day.pct_pos=m.pct_pos_14day,s.cdc_county_test_positivity=m):(s.daily.pct_pos=null,s.average.pct_pos=null,s.average_14day.pct_pos=null)}return E=Object.assign({},v),s});if(e.average_overrides){const t=new Map;e.average_overrides.forEach(l=>{t.set(l.date,l)}),o.forEach(l=>{l.average.cases=t.get(l.date).cases,l.average.deaths=t.get(l.date).deaths})}const S={raw:{cases:null,deaths:null,hospitalized:null,icu:null,hospital_admissions:null,hospitalized_cumulative:null,hospital_beds_used:null,hospital_capacity:null,icu_occupied_currently:null,icu_capacity:null,tests:null,tests_positive:null,pct_pos:null},formatted:{cases:null,deaths:null,hospitalized:null,icu:null,hospital_admissions:null,hospitalized_cumulative:null,hospital_beds_used:null,hospital_capacity:null,icu_occupied_currently:null,icu_capacity:null,tests:null,tests_positive:null,pct_pos:null},accessible:{cases:null,deaths:null,hospitalized:null,icu:null,hospital_admissions:null,hospitalized_cumulative:null,hospital_beds_used:null,hospital_capacity:null,icu_occupied_currently:null,icu_capacity:null,tests:null,tests_positive:null,pct_pos:null}};Object.keys(S.raw).forEach(t=>{if(e.metadata.country==="United States"&&e.metadata.region_type==="county"&&t==="deaths")S.raw[t]=null,S.formatted[t]="\u2014",S.accessible[t]="\u2014";else{const l="average",v=o.map(w=>w[l][t]),r=_t(v,14,15);S.raw[t]=r,S.formatted[t]=F(r,v[v.length-1]),S.accessible[t]=F(r,v[v.length-1],!0)}});let U;e.metadata.country==="United States"&&e.metadata.region_type==="county"?U=t=>!t.anomalies.deaths||!t.anomalies.deaths.active?t.average_30day.deaths:null:U=t=>!t.anomalies.deaths||!t.anomalies.deaths.active?t.average.deaths:null;const Q=o.map(t=>t.anomalies).pop(),T={cases:o.slice(6).map(t=>!t.anomalies.cases||!t.anomalies.cases.active?t.average.cases:null).filter(t=>t===0||t).pop(),deaths:o.slice(6).map(U).filter(t=>t===0||t).pop(),hospitalized:o.slice(6).map(t=>t.average.hospitalized).filter(t=>t===0||t).pop(),icu:o.slice(6).map(t=>t.average.icu).filter(t=>t===0||t).pop(),hospital_admissions:o.slice(6).map(t=>t.average.hospital_admissions).filter(t=>t===0||t).pop(),hospitalized_cumulative:o.slice(6).map(t=>t.average.hospitalized_cumulative).filter(t=>t===0||t).pop(),hospital_beds_used:o.slice(6).map(t=>t.average.hospital_beds_used).filter(t=>t===0||t).pop(),hospital_capacity:o.slice(6).map(t=>t.average.hospital_capacity).filter(t=>t===0||t).pop(),icu_occupied_currently:o.slice(6).map(t=>t.average.icu_occupied_currently).filter(t=>t===0||t).pop(),icu_capacity:o.slice(6).map(t=>t.average.icu_capacity).filter(t=>t===0||t).pop(),tests:o.slice(o.length-15).map(t=>t.average.tests).filter(t=>t===0||t).pop(),pct_pos:o.slice(o.length-15).map(t=>t.average.pct_pos).filter(t=>t===0||t).pop()},V={total:e.latest,average:T,anomalies:Q,vaccination:e.vaccination?e.vaccination.latest:void 0,total_cases_last_7_days:o.map(t=>t.daily.cases).slice(-7).reduce(ct,0)},M=D(C({},e.metadata),{date:i[i.length-1],anomalies:e.anomalies,methodology:e.methodology,breadcrumbs:e.breadcrumbs,latest:V,percent_change_14day:S,data:o,hhs:e.hhs&&{hospitals:e.hhs.hospitals}});return e.latest_states_reporting&&(M.latest.states_reporting=e.latest_states_reporting),e.state_test_positivity_reliable&&(M.state_test_positivity_reliable=e.state_test_positivity_reliable),e.hhs&&e.hhs.hospitalization.length>0&&(M.hospital_area_population=e.hhs.hospital_area_population),e.metadata.country==="United States"&&e.metadata.region_type!=="county"&&(M.hospital_area_population=e.metadata.population),e.cdc_transmission&&(M.cdc_transmission=e.cdc_transmission),e.cdc_community_level&&(M.cdc_community_level=e.cdc_community_level),M}export{nt as d};

[rtiDebugInfo]0 0
